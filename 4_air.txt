> import pandas as pd
import numpy as np

> df = pd.read_csv ("C:/Users/Shree/Downloads/airquality_data.csv" ,encoding='cp1252', sep=',')
   df

> df.info()

> df.isnull().sum()

> percent_missing = df.isnull().sum()*100/len(df)
   percent_missing

> df.isna().sum()

> df=df.drop(['stn_code', 'agency','sampling_date','location_monitoring_station','pm2_5'], axis = 1)

> df.columns

> col_var = ['state', 'location', 'type','date']
col_num = ['so2','no2','rspm','spm']

> for col in df.columns:
    if df[col].dtype == 'object':
        df[col] = df[col].fillna(df[col].mode()[0])
    else:
        df[col] = df[col].fillna(df[col].mean())

> df.isna().sum()

> df

> df.drop_duplicates ()

> subSet1 = df[['state', 'type']]
   subSet2 = df[['state','location']]
   subSet1.head()

> subSet2.head()

> concatenated_df = pd.concat([subSet1, subSet2], axis=1)

> concatenated_df

> from sklearn.preprocessing import LabelEncoder

col_label= ['state','location','type']
# Initialize LabelEncoder

encoder = LabelEncoder()
# Iterate over columns
for col in df.columns:
        # Fit and transform the column
        df[col] = encoder.fit_transform(df[col])

> df

> def remove_outliers(column):
    Q1 = column.quantile(0.25)
    Q3 = column.quantile(0.75)
    IQR = Q3 - Q1
    threshold = 1.5 * IQR
    outlier_mask = (column < Q1 - threshold) | (column > Q3 + threshold)
    return column[~outlier_mask]

> df.columns

> col_name = ['so2', 'no2', 'rspm', 'spm']
for col in col_name:
    df[col] = remove_outliers(df[col])

> import seaborn as sns
import matplotlib.pyplot as plt

> plt.figure(figsize=(10, 6))  # Adjust the figure size if needed

> for col in col_name:
    sns.boxplot(data=df[col])
    plt.title(col)
    plt.show()
